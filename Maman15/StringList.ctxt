#BlueJ class context
comment0.target=StringList
comment1.params=
comment1.target=StringList()
comment1.text=\r\n\ Constactor\ for\ StringList\r\n\ \r\n\ Time\ complexity\:\ O(1)\r\n\ Space\ complexity\:\ O(1)\r\n
comment10.params=ch
comment10.target=int\ indexOf(int)
comment10.text=\r\n\ \ Returns\ the\ first\ index\ of\ the\ ch\ in\ the\ list\r\n\ \ \r\n\ \ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \ \r\n\ \ @param\ \ ch\ \ The\ char\ to\ find\r\n\ \ @return\ The\ first\ index\ if\ the\ ch\ in\ the\ list,\ -1\ if\ not\ found\r\n
comment11.params=ch\ fromIndex
comment11.target=int\ indexOf(int,\ int)
comment11.text=\r\n\ Returns\ the\ first\ index\ of\ the\ ch\ in\ the\ list\ starting\ from\ fromIndex\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ ch\ \ The\ char\ to\ find\r\n\ @param\ \ \ fromIndex\ \ \ the\ index\ to\ start\ looking\ from\r\n\ @return\ \ The\ first\ index\ if\ the\ ch\ in\ the\ list\ (starting\ from\ fromIndex),\ -1\ if\ not\ found\r\n
comment12.params=str
comment12.target=boolean\ equals(StringList)
comment12.text=\r\n\ Check\ if\ the\ list\ and\ str\ are\ equal\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ str\ The\ list\ to\ check\r\n\ @return\ \ If\ the\ StringList\ are\ equal\r\n
comment13.params=str
comment13.target=int\ compareTo(StringList)
comment13.text=\r\n\ Comparing\ the\ StringLists,\ if\ the\ current\ list\ (this)\ is\ smaller\ then\ return\ -1,\ if\ current\ list\ (this)\ is\ bigger\ then\ return\ 1,\ if\ equals\ then\ return\ 0\r\n\ this\ \=\=\ str\ ->\ 0\r\n\ this\ >\ atr\ ->\ +1\r\n\ this\ <\ str\ ->\ -1\r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ str\ The\ list\ to\ compare\ to\r\n\ @return\ \ if\ the\ current\ list\ (this)\ is\ smaller\ then\ return\ -1,\ if\ current\ list\ (this)\ is\ bigger\ then\ return\ 1,\ if\ equals\ then\ return\ 0\r\n
comment14.params=i
comment14.target=StringList\ substring(int)
comment14.text=\r\n\ Returns\ new\ list\ that\ starts\ from\ i\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(n)\r\n\ \r\n\ @param\ \ \ i\ \ \ The\ place\ to\ start\ from\r\n\ @return\ \ New\ list\ that\ starts\ from\ i\r\n
comment15.params=i\ j
comment15.target=StringList\ substring(int,\ int)
comment15.text=\r\n\ Returns\ new\ list\ that\ starts\ from\ i\ and\ ends\ in\ j\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(n)\r\n\ \r\n\ @param\ \ \ i\ \ \ The\ place\ to\ start\ from\r\n\ @param\ \ \ j\ \ \ The\ place\ to\ end\r\n\ @return\ \ New\ list\ that\ starts\ from\ i\ and\ ends\ in\ j\r\n
comment16.params=
comment16.target=int\ length()
comment16.text=\r\n\ Returns\ the\ length\ of\ the\ StringList\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @retun\ \ \ The\ length\ of\ the\ StringList\r\n
comment17.params=node1\ node2
comment17.target=boolean\ equals(CharNode,\ CharNode)
comment17.text=\r\n\ Check\ if\ the\ list\ and\ str\ are\ equal\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ node1\ \ \ The\ node\ from\ the\ current\ list\r\n\ @param\ \ \ node2\ \ \ The\ node\ from\ the\ second\ list\r\n\ @return\ \ If\ the\ StringList\ are\ equal\r\n
comment2.params=s
comment2.target=StringList(java.lang.String)
comment2.text=\r\n\ Constactor\ for\ StringList\ that\ convert\ String\ into\ StringList\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ s\ \ \ The\ string\ to\ convert\r\n
comment3.params=other
comment3.target=StringList(StringList)
comment3.text=\r\n\ Constractor\ that\ build\ new\ StringList\ from\ StringList\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ other\ \ \ The\ StringList\ to\ copy\r\n
comment4.params=node
comment4.target=StringList(CharNode)
comment4.text=\r\n\ Constractor\ that\ copy\ nodes\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ node\ \ \ \ The\ node\ to\ set\ as\ head\ and\ copy\ from\r\n
comment5.params=
comment5.target=CharNode\ getHead()
comment5.text=\r\n\ Returns\ the\ head\ of\ the\ list\r\n\ \r\n\ Time\ complexity\:\ O(1)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @return\ The\ head\r\n
comment6.params=head
comment6.target=void\ setHead(CharNode)
comment6.text=\r\n\ Set\ the\ head\ of\ the\ list\r\n\ \r\n\ Time\ complexity\:\ O(1)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ head\ \ \ \ the\ head\ node\ to\ set\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Convert\ the\ list\ into\ string\ and\ surround\ with\ "\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @return\ \ The\ list\ in\ string\ and\ surrounded\ with\ "\r\n
comment8.params=i
comment8.target=char\ charAt(int)
comment8.text=\r\n\ Returns\ the\ char\ at\ the\ index\ (assuming\ that\ the\ index\ is\ correct)\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(1)\r\n\ \r\n\ @param\ \ \ i\ \ \ The\ index\ of\ the\ char\r\n\ @return\ \ The\ char\ at\ the\ index\r\n
comment9.params=str
comment9.target=StringList\ concat(StringList)
comment9.text=\r\n\ Conecting\ 2\ StringList\ to\ one\r\n\ \r\n\ Time\ complexity\:\ O(n)\r\n\ Space\ complexity\:\ O(n)\r\n\ \r\n\ @param\ \ \ str\ the\ StringList\ to\ concatenate\r\n\ @return\ \ The\ current\ list\ with\ str\ concated\ after\r\n
numComments=18
